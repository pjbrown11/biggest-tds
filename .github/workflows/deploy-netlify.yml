name: Build & Deploy (Netlify)

on:
    workflow_dispatch:
        inputs:
            run_deploy:
                description: "Deploy to Netlify? (true/false)"
                required: false
                default: "true"
    schedule:
        # 6:00 AM America/Chicago (Central) on Tuesdays = 11:00 UTC
        - cron: "0 11 * * TUE"

permissions:
    contents: write

jobs:
    build:
        runs-on: ubuntu-latest
        env:
            # Let Puppeteer cache its downloaded Chrome between runs
            PUPPETEER_CACHE_DIR: ~/.cache/puppeteer
            PUPPETEER_SKIP_DOWNLOAD: "false"

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: |
                      package-lock.json
                      site/package-lock.json

            - name: Cache Puppeteer browser
              uses: actions/cache@v4
              with:
                  path: ~/.cache/puppeteer
                  key: puppeteer-${{ runner.os }}-chrome-${{ hashFiles('site/package-lock.json') }}
                  restore-keys: |
                      puppeteer-${{ runner.os }}-chrome-

            - name: Install root deps (if present)
              run: |
                  if [ -f package-lock.json ]; then npm ci; fi

            - name: Install site deps (include dev for Puppeteer)
              run: |
                  cd site
                  npm ci --include=dev

            - name: Install Chromium for Puppeteer
              run: |
                  cd site
                  npx puppeteer browsers install chrome

            # Build + run data scripts via your existing root script
            - name: Build site (runs data scripts + SvelteKit build)
              env:
                  NODE_ENV: production
              run: |
                  npm run build-site

            # Update README with latest build info (badge + run link)
            - name: Update README with latest build info
              if: ${{ always() }}
              shell: bash
              env:
                  REPO: ${{ github.repository }}
                  REF_NAME: ${{ github.ref_name }}
                  RUN_ID: ${{ github.run_id }}
                  BADGE_WORKFLOW_FILE: deploy-netlify.yml # <- pin the badge target
              run: |
                  node - <<'NODE'
                  const fs = require('fs');
                  const path = require('path');

                  const repo   = process.env.REPO;
                  const ref    = process.env.REF_NAME;
                  const runId  = process.env.RUN_ID;
                  const wfFile = process.env.BADGE_WORKFLOW_FILE || 'deploy-netlify.yml';

                  const badgeUrl = `https://github.com/${repo}/actions/workflows/${wfFile}/badge.svg?branch=${ref}`;
                  const runUrl   = `https://github.com/${repo}/actions/runs/${runId}`;
                  const ts       = new Date().toISOString();

                  const block =
                    '## Latest CI build\n\n' +
                    `![Build & Deploy (Netlify)](${badgeUrl})\n\n` +
                    `**When:** ${ts}\n` +
                    `**Workflow run:** [#${runId}](${runUrl})\n`;

                  const file = 'readme.md';
                  const marker = '<!-- CI-BUILD-BLOCK -->';

                  let md = '';
                  try { md = fs.readFileSync(file, 'utf8'); } catch {}

                  if (md.includes(marker)) {
                    const parts = md.split(marker);
                    md = parts[0] + marker + '\n\n' + block + '\n';
                  } else {
                    md += `\n\n${marker}\n\n${block}\n`;
                  }

                  fs.writeFileSync(file, md, 'utf8');
                  console.log(`README updated using workflow file: ${wfFile}`);
                  NODE

            # Commit only generated data (never the build output) + README
            - name: Commit updated data (if any)
              run: |
                  git config user.name "github-actions[bot]"
                  git config user.email "github-actions[bot]@users.noreply.github.com"

                  git add \
                    site/src/data/trades/trades-current-year.json \
                    site/src/data/standings/standings-current-year.json \
                    site/src/data/drafts/dynasty-rankings.json \
                    readme.md || true

                  if ! git diff --cached --quiet; then
                    git commit -m "chore(ci): update generated data + README [skip ci]"
                    git push
                  else
                    echo "No data/README changes to commit."
                  fi

            - name: Upload build artifact (optional)
              uses: actions/upload-artifact@v4
              with:
                  name: site-build
                  path: site/build

            - name: Deploy to Netlify
              if: ${{ github.event_name == 'schedule' || github.event.inputs.run_deploy != 'false' }}
              run: |
                  npx --yes netlify-cli deploy --dir=site/build --prod --site="$NETLIFY_SITE_ID"
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
